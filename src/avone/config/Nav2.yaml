controller_server:
  ros__parameters:

    # ─── costmaps ─────────────────────────────────────────────────────────────
    local_costmap:
      width: 6.0
      height: 6.0
      resolution: 0.05
      update_frequency: 10.0
      publish_frequency: 2.0
      robot_base_frame: "base_link"
      use_sim_time: true
      plugins:
        - name: obstacle_layer
          type: "nav2_costmap_2d::ObstacleLayer"
        - name: inflation_layer
          type: "nav2_costmap_2d::InflationLayer"

    global_costmap:
      robot_base_frame: "base_link"

    # ─── controller plugin ────────────────────────────────────────────────────
    controller_plugins: ["FollowPath"]      # <-- only one list

    FollowPath:                             # <-- same name as above
      plugin: "nav2_regulated_pure_pursuit_controller::RegulatedPurePursuitController"
      lookahead_distance:      2.0
      min_lookahead_distance:  0.5
      max_lookahead_distance:  4.0
      min_turning_radius:      6.0
      max_turning_radius:      10.0
      transform_tolerance:     0.2
      use_rotate_to_heading:        false
      rotate_to_heading_min_angle:  6.28    # huge, so it never triggers
      rotate_to_heading_angular_vel: 0.5
        # default 1.8 rad/s :contentReference[oaicite:0]{index=0}
      max_angular_accel:          1.0     # default 3.2 rad/s² :contentReference[oaicite:1]{index=1}

      # also slow your forward speed (reduces turning aggressiveness)
      desired_linear_vel:         0.2     # default 0.5 m/s :contentReference[oaicite:2]{index=2}


    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance:   0.10       # 10 cm
      yaw_goal_tolerance:  6.28       # 360° tolerance!
      stateful:            true